@model BsmWebApp.ViewModels.Budgets.BudgetMainViewModel

<style>
    /*Required in order to remove the margin from the autocomplete*/
     .k-animation-container {
        padding-left:0px !important;
        margin-left:0px !important;
    }

</style>

 <script>
     $(document).ready(function () {
         $("#MisparIshi").kendoAutoComplete({
             placeholder: "הקלד מ.א/שם עובד...",
             // dataTextField: "SiteName",
             // dataTextField: "MisparIshi",
             // dataValueField: "MisparIshi",
             filter: "startswith",
             minLength: 1,
             maxLength:5,
             dataSource: {
                 type: "json",
                 serverFiltering: true,
                 serverPaging: true,
                 pageSize: 20,
                 transport: {
                     read:
                         {
                             url: "Budget/GetMisparIshiWith" @* ?kod=@Model.KodMitkan&tarrich=@Model.Month"*@
                         }, //read
                     parameterMap: function () {// send value of autocomplete as the "startsWith" parameter
                         return {
                             startsWith: $("#MisparIshi").data("kendoAutoComplete").value()
                         };
                     }
                 } //transport
             } //datasource
         }); //kendoAutoComplete
     }); //DocumentReady


     //$(document).ready(function () {
     //    $("#OvedName").kendoAutoComplete({
     //        placeholder:"הקלד מ.א\שם עובד...",
     //        // dataTextField: "SiteName",
     //      //  dataTextField: "FullName",
     //      //  dataValueField: "FullName",
     //        filter: "startswith",
     //        minLength: 1,
     //        dataSource: {
     //            type: "json",
     //            serverFiltering: true,
     //            serverPaging: true,
     //            pageSize: 20,
     //            transport: {
     //                read:
     //                    {
     //                        url: "Budget/GetOvdimNameWith"
     //                    }, //read
     //                parameterMap: function () {// send value of autocomplete as the "startsWith" parameter
     //                    return {
     //                        startsWith: $("#OvedName").data("kendoAutoComplete").value()
     //                    };
     //                }
     //            } //transport
     //        } //datasource
     //    }); //kendoAutoComplete
     //}); //DocumentReady



 </script>
@using (Html.BeginForm())
{

    if (Model.UsersInMitkan.Employees.Count > 0)
    {
@*<hr class="styled" />*@
@*<div>
        <input type="button" value="שמור" onclick="CheckHaveChanges()" />
    </div>*@

    <div class="bgGray" style="height: 64px;">
        <div class="row" style="padding-top: 18px">
            <div class="col-md-4">
                <label style="width: 20px; float: right"></label>
                <span style="clear:both">
                    <input id="MisparIshi" style="width: 250px" class="styleTBSearch GeneralText TextBoxRO" />
                </span>
                <input class="SearchBG" onclick="findDataItem();" type="button" />
                @*    <input type="text"  id="txtSearch" class="TextBoxRO GeneralText styleTBSearch" value=""  />*@
                @*            @Html.TextBoxFor(m=>m.MisparIshi, new { @Value = "" , Style="margin-right:20px;" , @onblur = "CheakValid(this);", data_val_number="אנא הזן מספרים בלבד",required="false" ,@class = "styleTBSearch GeneralText TextBoxRO"})    *@
                @*   @Html.TextBoxFor(m=>m.MisparIshi, new { @Value = "" , Style="margin-right:20px;" ,data_val_number="אנא הזן מספרים בלבד",required="false" ,@class = "styleTBSearch GeneralText TextBoxRO"}) 
               *@


                @*  <input class="CheackBoxBG" type="checkbox" style="margin-right:65px;"/> 
                      <label  class="GeneralText">הצג חריגים בלבד</label>*@
            </div>

            <div class="col-md-2">

                <a href="#" onclick="DisplayAllocatedHoursOptions()">
                    <div id="divCal" style="text-align: right; width: 200px; text-align: left" class="pointer">
                        <label class="PurpleTextBoldLink pointer" style="padding-top: 5px">הקצאה אוטומטית</label>
                    </div>
                </a>

                @*  <a class="PurpleTextBoldLink" ><img  src="~/Content/Images/calender.png" style="margin-right:150px"   />
                        הקצאה אוטומטית</a> *@
            </div>
            <div class="col-md-2">
                <a>
                    <div id="divIpus" style="text-align: right; width: 80px; text-align: left" onclick="ModifyGrid('ipus');" class="pointer">
                        <label class="PurpleTextBoldLink pointer" style="padding-top: 5px">איפוס</label>
                    </div>
                </a>


                @*  <a class="PurpleTextBoldLink"   > <img  src="~/Content/Images/refresh.png" style="margin-right:28px" />
                               איפוס</a>*@
                @*<label class="PurpleTextBoldLink"   >איפוס</label>*@
            </div>

            <div class="col-md-4" align="left" style="padding-left: 30px">
                <input type="button" id="btnUpdate" value="עדכן מכסות" style="width: 124px; margin-left: 10px" class="PurpleButton DoubleArrow k-grid-save-changes" />
                <a class="PurpleTextBoldLink pointer k-grid-cancel-changes k-cancel" href="#" onclick="ModifyGrid('cancel');">בטל שינויים</a>
            </div>
        </div>
    </div>
    <div class="bgGray">
        <div class="BgFirstTitleGrid">
            <div class="col-md-7 divFirstHeader" style="padding-top: 5px">
                <label class="TextBold">נתוני עובד</label>
            </div>

            <div class="col-md-5 divFirstHeader" style="padding-left: 1px; border-right: 1px solid white; padding-top: 5px">
                <label class="TextBold">נתוני הקצאה לחודש נוכחי</label>
            </div>
        </div>
    </div>
    
    <div class="bgGray">


        @{
        //<a class="analyticsDetailsInfo" href="/Admin/ModifyExamAnalytic?examTypeId=225&analyticId=Core&addAnalytic=False">ערוך אנליטיקה</a>
        //Html.Kendo().Grid(Model.UsersInMitkan.Employees)
        Html.Kendo().Grid<BsmCommon.DataModels.Budgets.BudgetEmployeeGrid>()
           .Name("EmployeesList").Columns(columns =>
           {
               //  columns.Bound(o => o.MisparIshi).ClientTemplate("#=GetImage(data.MisparIshi)#").HtmlAttributes(new { style = "text-align: center; width: 30%; min-width: 60px;" });


               //  columns.Bound(o => o.MisparIshi).Title("נוכחות").ClientTemplate("<input type='button'  value='ff'   onclick='OpenKds();'   />").Width(80);
               columns.Template(o => o.MisparIshi).ClientTemplate("<img src='../../Content/Images/pai.png' onclick='OpenKds(#= MisparIshi #);' />"); //http://kds/Modules/Ovdim/NochechutMerukezet.aspx
               columns.Bound(o => o.MisparIshi).Title("מספר אישי");
               columns.Bound(o => o.FullName).Title("שם עובד");
               columns.Bound(o => o.TeurIsuk).Title("עיסוק");
               columns.Bound(o => o.AlTikni).Title("על תקני");
               columns.Bound(o => o.TeurMutamut).Title("מותאם");
               columns.Bound(o => o.TeurGil).Title("גיל");
               columns.Bound(o => o.MichsaYomit).Title("מכסה יומית");
               columns.Bound(o => o.NosafotPrev).Title("הקצאה לחודש קודם");
               columns.Bound(o => o.MichsaCur).Title("הקצאת שעות").HtmlAttributes(new { onchange = "CheakValid(this);", @class = "CellEditGrid" }).Width(80);
               columns.Bound(o => o.ShaotShebuzu).Title("שעות שבוצעו");
               columns.Bound(o => o.Paar).Title("פער");//.ClientTemplate("<div style='direction:ltr'>#= Paar #</div>");//.HtmlAttributes(new { style = " direction:ltr;" });
               columns.Bound(o => o.ReadOnly).Hidden();

               ////columns.Bound(o => o.MisparIshi).Title("מספר אישי").Title("ddd").Width(80);
               ////columns.Bound(o => o.FullName).Title("שם עובד").Width(100);
               ////columns.Bound(o => o.TeurIsuk).Title("עיסוק").Width(100);
               ////columns.Bound(o => o.AlTikni).Title("על תקני").Width(50);
               ////columns.Bound(o => o.TeurMutamut).Title("קוד מותאם").Width(80);
               ////columns.Bound(o => o.TeurGil).Title("קוד גיל").Width(80);
               ////columns.Bound(o => o.MichsaYomit).Title("מכסה יומית </br> (כולל הלבשה)").Width(80);
               ////columns.Bound(o => o.NosafotPrev).Title(String.Format("{0:MM/yyyy}", Model.Month.AddMonths(-1)) + "</br>ש''נ שבוצעו").Width(80);
               ////columns.Bound(o => o.MichsaPrev).Title(String.Format("{0:MM/yyyy}", Model.Month.AddMonths(-1)) + "</br> מאפיין ש''נ</br>תפקיד ").Width(80);
               ////columns.Bound(o => o.NosafotCur).Title(String.Format("{0:MM/yyyy}", Model.Month) + "</br>ש''נ שבוצעו").Width(80);
               ////columns.Bound(o => o.MichsaCur).Title(String.Format("{0:MM/yyyy}", Model.Month) + "</br> מאפיין ש''נ</br>תפקיד ").HtmlAttributes(new { onchange = "ShowDialogsSave();", style = "border: 8px double lightgray;" }).Width(30);
               //////columns.Bound(o => o.MichsaCur).Title("מכסת ש''נ</br>  בחודש נוכחי").ClientTemplate("<input style='float: right;width:80px;' value='#=MichsaCur#'  name=''  />").Width(30);
               ////columns.Bound(o => o.NosafotNotUsed).Title(String.Format("{0:MM/yyyy}", Model.Month) + "</br> ש''נ בלתי  </br> מנוצלות").Width(80);

               // columns.Bound(o => o.MisparIshi).Filterable(false).Width(125).ClientTemplate(Html.Kendo().NumericTextBox().Name("mp_sss").Min(0).HtmlAttributes(new { value = "#=o.MisparIshi#", style = "width: 100px;" }).ToClientTemplate().ToHtmlString());
               // onclick="ShowPopUp('@Html.DisplayFor(model => model.KodMitkan)','@Html.DisplayFor(model => model.MitkanName)','@Html.ValueFor(model => model.Month, "{0:dd/MM/yyyy}")');
               //  columns.Bound(o => o.MisparIshi).Title("נוכחות").ClientTemplate("<input type='button'  style='float: right;'  value='הפק דוח' onclick='ShowReportNochechut(dataItem.MisparIshi, 4545)'  />").Width(80);
               ////columns.Bound(o => o.MisparIshi).Title("נוכחות").ClientTemplate("<input style='float: right;' type='button' value= 'הפק דוח' onclick='ShowReportNochechut(#= MisparIshi #);'     />").Width(80);


               //   columns.Bound(o => o.MisparIshi).Title("נוכחות").ClientTemplate("<input type='submit'  style='float: right;'  value='הפק דוח' name='action:Nochechut' />").Width(80);
               //    columns.Bound(o => o.Meafyen14).Hidden();

@* columns.Template(o=> @Html.ActionLink("הפק דו''ח","CreateNochechutRdl",new{ovedId=o.MisparIshi})).Width(100);
                   columns.Template(o=>{
                                    return string.Format("<a href='#' onclick='ShowPopUp({0});'>פתח</a>",o.MisparIshi);
                                    }).Width(100);*@


           })
            .ToolBar(toolbar =>
            {
                toolbar.Custom().Text("עדכן מכסות").HtmlAttributes(new { @class = "k-grid-save-changes k-update" });
                // toolbar.Custom().Text("עדכן מכסות").HtmlAttributes(new { @onclick = "CheckHaveChanges();", @class = "k-grid-save-changes k-update" });
                toolbar.Custom().Text("בטל שינויים").HtmlAttributes(new { @class = "k-grid-cancel-changes k-cancel" });
            })

            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Pageable()
            .Sortable()


           //.Filterable()
            .Events(events => events.DataBound("onDataBound"))
            //.Editable(editable => editable.Mode(GridEditMode.InCell)) // Use in-cell editing mode
            .DataSource(dataSource =>
                dataSource.Ajax()
                    .PageSize(12)
                    .ServerOperation(false)
                    .Batch(true) // Enable batch updates
                    .Model(model =>
                    {
                        model.Id(employee => employee.MisparIshi); // Specify the property which is the unique identifier of the model


                        model.Field(employee => employee.MisparIshi).Editable(false);
                        model.Field(employee => employee.FullName).Editable(false);
                        model.Field(employee => employee.TeurIsuk).Editable(false);
                        model.Field(employee => employee.AlTikni).Editable(false);
                        model.Field(employee => employee.TeurMutamut).Editable(false);
                        model.Field(employee => employee.TeurGil).Editable(false);
                        model.Field(employee => employee.MichsaYomit).Editable(false);
                        model.Field(employee => employee.NosafotPrev).Editable(false);
                        model.Field(employee => employee.NosafotCur).Editable(false);
                        model.Field(employee => employee.ShaotShebuzu).Editable(false);
                        //  model.Field(employee => employee.MichsaCur).Editable(DateTime.Now < Model.LastDateIdkunBank ? true : false);
                        model.Field(employee => employee.Paar).Editable(false);
                    })
                .Read(read => read.Action("EmployeesInMitkanRead", "Budget", new { KodYechida = Model.KodMitkan, month = Model.Month }))  // Action method invoked when the grid needs data
                    //.Create(create => create.Action("Products_Create", "Home")) // Action method invoked when the user saves a new data item
                .Update(update => update.Action("EmployeesInMitkanUpdate", "Budget", new { month = Model.Month })) //"additionalInfo"))  // Action method invoked when the user saves an updated data item
            //   .Events(events => events.RequestEnd("onGridRequestEnd"))
            //.Destroy(destroy => destroy.Action("Products_Destroy", "Home")) // Action method invoked when the user removes a data item

                // .Update(update => update
            // .Action("EmployeesInMitkanUpdate", "Budget"))  // Action invoked when the user saves an updated data item
            // .Events(events => events.SaveChanges("CheckHaveChanges"))
                )
            /*  .Events(events => events.SaveChanges(
                    @<text>
                      function(e) {
                      alert("jj");
                    CheckHaveChanges();
                      }
                      </text>
                      ))*/
           .Render();
           
        
        }


    </div>
    <div id="dialog-confirm"></div>
    <div id="dialog-allocated"></div>
    
    }


}


<div id="dialogNoch" title="Basic dialog">
</div>

<script type="text/javascript">
    var displayMessage = @Model.ShouldDisplayMessage;
    $(document).ready(function(){
        if(displayMessage==1){
            alert("Need to display message")
        }
    });

    function OpenKds(misparishi)
    {
        //  alert('ggg');
        var model = @Html.Raw(Json.Encode(Model));
        var month =model.SelectedMonth;
        window.open("http://kdstest/Modules/Ovdim/NochechutMerukezet.aspx?mispar_ishi=" + misparishi +"&chodesh="+month);
        //     alert("ff");
    }


    function findDataItem() {
        //get grid datasource
        //  debugger;

        var theGrid = $('#EmployeesList')
        var dataItem = $('#MisparIshi');
        var ds = theGrid.dataSource;
      
        var ds = $('#EmployeesList').data("kendoGrid").dataSource;//.data()[0].MisparIshi

        var view = kendo.data.Query.process(ds.data(), {
            filter: ds.filter(),
            sort: ds.sort()
        }).data;

        var index = -1;
        // find the index of the matching dataItem
        for (var x = 0; x < view.length; x++) {
            if (view[x].MisparIshi == dataItem.val() || view[x].FullName == dataItem.val()) { //dataItem.Id) {
                index = x;
                break;
            }
        }

        if (index === -1) {
            alert('מספר אישי זה לא קיים למתקן זה');
            return;
        }

        var page = Math.floor(index / ds.pageSize());
        var targetIndex = index - (page * ds.pageSize()) + 1;
        //page is 1-based index    
        ds.page(++page);
        //grid wants a html element. tr:eq(x) by itself searches in the first grid!    
        var row = $("#EmployeesList").find("tr:eq(" + targetIndex + ")")[0];
        theGrid.select(row);
        $("#EmployeesList").find("tr:eq(" + targetIndex + ")")[0].className = "clickable";

        // console.log('Found it at Page: ' + page + 'index: ' + targetIndex);

    }

    function ModifyGrid(src) {
        var title="";
        switch (src)
        {
            case "ipus":
                $("#dialog-confirm").html("עדכון זה יגרום לאיפוס השעות הנוספות שהוקצו לעובדים, האם לאפס?");
                title="  איפוס מכסות  ";
                break;
            case "cancel":
                $("#dialog-confirm").html("עדכון זה יגרום לביטול השעות שעדכנת כעת, האם לבטל שינויים?");
                title="  ביטול שינויים ";
                break;   
        }
           
        //alert(title);
        // Define the Dialog and its properties.
        $("#dialog-confirm").dialog({    
            resizable: false,
            modal: true,
            title: title,
            height: 200,
            width: 400,
            focus: function( event, ui ) {document.activeElement.blur();},
            buttons: {
                "כן": function () {
                    $(this).dialog('close');

                    switch (src)
                    {
                        case "ipus":
                            var grid = $("#EmployeesList").data("kendoGrid");
                            var data = grid.dataSource.data();
                            $.each(data, function (i, row) {
                                var dt = row;
                                dt.MichsaCur = 0;
                                dt.dirty = true;
                                grid._modelChange({ field: "MichsaCur", model: dt });
                            });
                            break;
                        case "cancel":
                            var grid = $("#EmployeesList").data("kendoGrid");
                            grid.cancelChanges();
                            break;   
                    }
                },
                "לא": function () {
                    $(this).dialog('close');
                  
                }
            }
        });

    }
    $(".k-grid-save-changes").click(function(e) { return CheckHaveChanges();  });



    // $(".k-grid-cancel-changes").click(function(e) { xx();});
    var ShowdSave=true;
    //var ShowCancel=true;
    function CheakValid(e)
    {
        //  var x=this;
        ShowdSave=true;

    }
    function CheckHaveChanges()
    {
        var grid = $("#EmployeesList").data("kendoGrid");
        var data = grid.dataSource.data();
        var num=0;
        var sum=0;
        $.each(data, function (i, row) {
            var dt = row;
            if (dt.dirty == false)
                num++;
            sum=sum +=dt.MichsaCur;
        });
        if (data.length == num){
            alert("לא בוצע שינוי במסך");
            return false;
        }
        else{
            
            var model = @Html.Raw(Json.Encode(Model));
            if(sum>+(model.MitkanBudgetDetail.BudgetVal))
            {
                alert("לא ניתן לבצע שמירה: סה''כ המכסות שעודכנו גדול מתקציב השעות הנוספות");
            }
            else
            {
                $("#dialog-confirm").html("עדכון זה יגרום לביטול השעות שעדכנת כעת, האם לבטל שינויים?");
                //   return  confirm('הנך בטוח שאתה רוצה לעדכן את המכסות?'); 
       
                if(ShowdSave == true)
                {
                    // Define the Dialog and its properties.
                    $("#dialog-confirm").dialog({    
                        resizable: false,
                        modal: true,
                        title: " עידכון מכסות ",
                        height: 200,
                        width: 400,
                        focus: function( event, ui ) {document.activeElement.blur();},
                        buttons: {
                            "כן": function () {
                                $(this).dialog('close');
                                ShowdSave= false;
                                $(".k-grid-save-changes").click();
                                return true;
                            },
                            "לא": function () {
                                $(this).dialog('close');
                                return false;
                            }
                        }
                    });
                    return false;
                }else return true;
            }
        }
    }
   
    function onDataBound(arg) {
        var grid = $("#EmployeesList").data("kendoGrid");
        var trs = grid.tbody.find('tr');
        trs.each(function () {
            var dt = grid.dataItem($(this));
            if (dt.dirty == true) {
                grid._modelChange({ field: "MichsaCur", model: dt });
            }
            if(dt.ReadOnly == "true")
            {
                // this.childNodes[9].disabled = true;
                $(this).find('td.CellEditGrid').prop( "disabled", true ).css( 'color','#bbbbbb');
            }

        });
    }

    $(function(){
        $("#dialog-allocated").dialog({
            autoOpen: false, width: 400, height:450,modal:true
        });
    });

    function DisplayAllocatedHoursOptions()
    {
        var url= "Budget/GetAllocatedHoursType";
        $("#dialog-allocated").html("")
        .dialog("option","title","הקצאת שעות")
        .load(url,function(){
            $("#dialog-allocated").dialog("open");
        });

    }

    function dispalyResult(val)
    {
        alert(val);
    }
    /* function CheakValid(obj) {
         //  debugger;
         if (obj.value != '') {
             if (IsNumeric(obj.value) == false) {
                 $("#btnExecSearch").attr('disabled', 'disabled');
                 // $("#btnExecSearch").prop("disabled", true);             
                 //  alert("מספר אישי לא חוקי");
                 $('#MisparIshi').focus();
             }
             else {
                 SetNameOved(obj);
                 //$("#btnExecSearch").prop("disabled", false);
                 $("#btnExecSearch").removeAttr('disabled');
             }
         }
     }*/

    /************************************************************/
    
    function ShowReportNochechut(misparIshi) {
        //   alert(kod);
        var titel = " דו''ח נוכחות ";
        // titel = titel + name + " לחודש " + " \n ";
        // titel = titel + month;
        //$("#dialogNoch").html("")
        //    .dialog("option", "title", titel)
        //    .load('/Budget/GetReportNochechut?MisparIshi=' + kod + "&chodesh=" + month, function () { $("#dialogNoch").dialog("open"); });
        var model = @Html.Raw(Json.Encode(Model));
        var month =model.SelectedMonth;
       
        //SelectedMonth
        window.open('/Budget/GetReportNochechut?MisparIshi=' + misparIshi + "&chodesh=" + month, '_blank', "toolbar=no,scrollbars=yes,location=no,resizable =yes,left=150,top=10,width=950,height=850");


    }

    function GetImage(image) {
        var returnString = '<img src="~/Content/Images/kds.png" title=\"image\" height=\"24\" alt=\"image\"/>';   
        return returnString;
    }

    //$(function () {
    //    $("#dialogNoch").dialog(
    //        {
    //            autoOpen: false, width: 'auto',
    //            height: 'auto',
    //            modal: false,
    //            buttons: {
    //                "סגור": function () {
    //                    $(this).dialog("close");
    //                }
    //            }
    //        });
    //});


    //$(function ()
    //{
    //    $("#EmployeesList").find(".k-grid-toolbar").insertAfter($("#grid .k-grid-content"));
    //});


  

    function CopyMichsotLastMonth(){
        var grid = $("#EmployeesList").data("kendoGrid");
        var data = grid.dataSource.data();
        $.each(data, function (i, row) {
            var dt = row;
            dt.MichsaCur = dt.Meafyen14;
            dt.dirty = true;
            grid._modelChange({ field: "MichsaCur", model: dt });
        });
    }
    function GetColumnIndex(columnName) {
        var grid = $("#EmployeesList").data("kendoGrid");
        var columns = grid.columns;
        for (var i = 0; i < columns.length; i++)
            if (columns[i].field == columnName)
                return i;
        return -1;
    };

       

   

    //function SetMisparIshi(obj) {
    //    if (obj.value != '') {
    //        $.ajax({
    //            type: "POST",
    //            url: "/Budget/GetOvedIdByName",
    //            contentType: "application/json; charset=utf-8",
    //            data: "{sName:'" + obj.value + "'}",
    //            dataType: "json",
    //            async: false,
    //            success: function (response) {

    //                if (response != '')
    //                    $('#MisparIshi').val(response);
    //                else {
    //                    $('#OvedName').focus();
    //                    alert('שם זה לא קיים למתקן זה');
    //                }
    //            },
    //            error: function (XMLHttpRequest, textStatus, errorThrown) {
    //                alert("תקלה:" + errorThrown);
    //            }
    //        });
    //    }
    //}

    //function SetNameOved(obj) {

    //    $.ajax({
    //        type: "POST",
    //        url: "/Budget/GetOvedNameById",
    //        contentType: "application/json; charset=utf-8",
    //        data: "{id:'" + obj.value + "'}",
    //        dataType: "json",
    //        async: false,
    //        success: function (response) {
    //            if (response != '')
    //                $('#OvedName').val(response);
    //            else {
    //                $('#MisparIshi').focus();
    //                alert('מספר אישי זה לא קיים למתקן זה');
    //            }
    //        },
    //        error: function (XMLHttpRequest, textStatus, errorThrown) {
    //            alert("תקלה:" + errorThrown);
    //        }
    //    });
    //}


     





        








    //function ShowPopUp(misparIshi) {
    //    //  $("#dialog").dialog();
    //    $("#dialog").html("")
    //        .dialog("option", "title", "הפחתות והוספות")
    //        .load('/Budget/DispalyChanges?ovedId=' + misparIshi,
    //      function () { $("#dialog").dialog("open"); });

    //}

    //$(function ()
    //{
    //    $("#dialog").dialog(
    //        {
    //            autoOpen: false, width: 400, height: 450, model: true,
    //            buttons: {
    //                "Close": function () {
    //                    $(this).dialog("close");
    //                }
    //            }
    //        });
    //});

       
</script>
